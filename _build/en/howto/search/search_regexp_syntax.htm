<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Regular Expression Syntax &#8212; EmEditor  documentation</title>
    <link rel="stylesheet" type="text/css" href="../../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/basic_mod.css?v=0.7.0-1" />
    <link rel="stylesheet" type="text/css" href="../../_static/custom.css" />
    <script data-url_root="../../" id="documentation_options" src="../../_static/documentation_options.js"></script>
    <script src="../../_static/doctools.js"></script>
    <script src="../../_static/sphinx_highlight.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,600,0,0" />

    <script src="../../_static/js/theme.js"></script>
    <script src="../../_static/js/petite-vue.js"></script>

    <script>
        window.addEventListener("load", () => {
            // Replace <pro /> and <profree /> tags
            for (const element of document.querySelectorAll(".pro")) {
                element.textContent = "[P]";
                element.setAttribute("title", "EmEditor Professional only");
                element.style.verticalAlign = "super";
                element.style.fontSize = "smaller";
                element.style.cursor = "help";
            }

            for (const element of document.querySelectorAll(".profree")) {
                element.textContent = "[PF]";
                element.setAttribute("title", "EmEditor Professional and EmEditor Free");
                element.style.verticalAlign = "super";
                element.style.fontSize = "smaller";
                element.style.cursor = "help";
            }
        });
    </script>

    <link rel="index" title="Index" href="../../genindex.htm" />
    <link rel="search" title="Search" href="../../search.htm" />
    <link rel="next" title="To Replace a String" href="search_replace.htm" />
    <link rel="prev" title="To Use Regular Expressions" href="search_regexp.htm" /> 
  </head>
    <body data-dark_mode_code_blocks="true">


<div id="top_nav">
    

    <nav>
        
            
        

        <p id="toggle_sidebar">
            <a href="#" title="Toggle sidebar">|||</a>
        </p>
        <h1><a href="../../index.htm" title="Go to homepage">EmEditor  documentation</a></h1>

        <div class="languageDropdown">
            <a href="#" onclick="toggleLanguageDropdown()">
                
                    English
                
            </a>
            <div class="languageDropdown-content">
                <a href="/emeditor-help/en/howto/search/search_regexp_syntax">English</a>
                <a href="/emeditor-help/ja/howto/search/search_regexp_syntax">日本語</a>
                <a href="/emeditor-help/ko/howto/search/search_regexp_syntax">한국어</a>
                <a href="/emeditor-help/zh-cn/howto/search/search_regexp_syntax">简体中文</a>
                <a href="/emeditor-help/zh-tw/howto/search/search_regexp_syntax">繁體中文</a>
            </div>
        </div>

        &nbsp;&nbsp;&nbsp;&nbsp;

        <a id="mode_toggle" href="#" @click.prevent="handleClick" :title="mode">
    <template v-if="mode == 'light'">
        <svg width="100%" height="100%" viewBox="0 0 79 80" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"><g id="mode_light"><rect id="Bounds" x="0" y="-0" width="78.623" height="79.049" style="fill:none;"/><circle cx="39.311" cy="39.524" r="15.734" style="fill:#333333;"/><g id="beams"><g id="beam"><path id="beam1" serif:id="beam" d="M44.212,4.901c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,-0 -4.9,2.196 -4.9,4.901l-0,9.614c-0,2.705 2.196,4.901 4.9,4.901c2.705,0 4.901,-2.196 4.901,-4.901l0,-9.614Z" style="fill:#333333;"/></g><g id="beam2" serif:id="beam"><path id="beam3" serif:id="beam" d="M67.48,18.073c1.913,-1.912 1.913,-5.018 0,-6.931c-1.912,-1.912 -5.018,-1.912 -6.931,0l-6.798,6.799c-1.912,1.912 -1.912,5.018 0,6.931c1.913,1.912 5.018,1.912 6.931,-0l6.798,-6.799Z" style="fill:#333333;"/></g><g id="beam4" serif:id="beam"><path id="beam5" serif:id="beam" d="M25.728,61.108c1.912,-1.913 1.912,-5.018 -0,-6.931c-1.913,-1.913 -5.019,-1.913 -6.931,-0l-6.799,6.798c-1.912,1.913 -1.912,5.019 0,6.931c1.913,1.913 5.019,1.913 6.931,0l6.799,-6.798Z" style="fill:#333333;"/></g><g id="beam6" serif:id="beam"><path id="beam7" serif:id="beam" d="M60.682,54.177c-1.913,-1.913 -5.018,-1.913 -6.931,-0c-1.912,1.913 -1.912,5.018 0,6.931l6.798,6.798c1.913,1.913 5.019,1.913 6.931,0c1.913,-1.912 1.913,-5.018 0,-6.931l-6.798,-6.798Z" style="fill:#333333;"/></g><g id="beam8" serif:id="beam"><path id="beam9" serif:id="beam" d="M4.901,34.623c-2.705,0 -4.901,2.196 -4.901,4.901c0,2.705 2.196,4.901 4.901,4.901l9.614,0c2.705,0 4.901,-2.196 4.901,-4.901c0,-2.705 -2.196,-4.901 -4.901,-4.901l-9.614,0Z" style="fill:#333333;"/></g><g id="beam10" serif:id="beam"><path id="beam11" serif:id="beam" d="M44.212,64.534c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,-0 -4.9,2.196 -4.9,4.901l-0,9.614c-0,2.705 2.196,4.901 4.9,4.901c2.705,-0 4.901,-2.196 4.901,-4.901l0,-9.614Z" style="fill:#333333;"/></g><g id="beam12" serif:id="beam"><path id="beam13" serif:id="beam" d="M18.929,11.142c-1.912,-1.912 -5.018,-1.912 -6.931,0c-1.912,1.913 -1.912,5.019 0,6.931l6.799,6.799c1.912,1.912 5.018,1.912 6.931,-0c1.912,-1.913 1.912,-5.019 -0,-6.931l-6.799,-6.799Z" style="fill:#333333;"/></g><g id="beam14" serif:id="beam"><path id="beam15" serif:id="beam" d="M64.108,34.623c-2.705,0 -4.901,2.196 -4.901,4.901c-0,2.705 2.196,4.901 4.901,4.901l9.614,0c2.705,0 4.901,-2.196 4.901,-4.901c-0,-2.705 -2.196,-4.901 -4.901,-4.901l-9.614,0Z" style="fill:#333333;"/></g></g></g></svg>
    </template>

    <template v-if="mode == 'dark'">
        <svg width="100%" height="100%" viewBox="0 0 79 80" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"><g id="mode_dark"><rect id="Bounds" x="0" y="-0" width="78.623" height="79.049" style="fill:none;"/><circle cx="39.311" cy="39.524" r="15.734" style="fill:#333333;"/><g id="beams"><g id="beam"><path id="beam1" serif:id="beam" d="M44.212,14.515c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,0 -4.901,2.196 -4.901,4.901c0,2.705 2.197,4.901 4.901,4.901c2.705,0 4.901,-2.196 4.901,-4.901Z" style="fill:#333333;"/></g><g id="beam2" serif:id="beam"><path id="beam3" serif:id="beam" d="M60.662,24.892c1.902,-1.902 1.902,-4.99 0,-6.892l-0.04,-0.039c-1.901,-1.902 -4.989,-1.902 -6.891,-0c-1.901,1.901 -1.901,4.989 0,6.891l0.04,0.04c1.902,1.901 4.989,1.901 6.891,-0Z" style="fill:#333333;"/></g><g id="beam4" serif:id="beam"><path id="beam5" serif:id="beam" d="M25.732,61.103c1.91,-1.91 1.91,-5.011 0,-6.921l-0.009,-0.01c-1.91,-1.91 -5.012,-1.91 -6.921,-0c-1.91,1.91 -1.91,5.011 -0,6.921l0.01,0.01c1.909,1.91 5.011,1.91 6.92,-0Z" style="fill:#333333;"/></g><g id="beam6" serif:id="beam"><path id="beam7" serif:id="beam" d="M60.672,54.167c-1.907,-1.907 -5.004,-1.907 -6.911,0l-0.02,0.02c-1.907,1.907 -1.907,5.004 0,6.911c1.907,1.907 5.004,1.907 6.911,-0l0.02,-0.02c1.907,-1.907 1.907,-5.004 0,-6.911Z" style="fill:#333333;"/></g><g id="beam8" serif:id="beam"><path id="beam9" serif:id="beam" d="M14.52,34.623c-2.702,0 -4.896,2.194 -4.896,4.896l0,0.01c0,2.702 2.194,4.896 4.896,4.896c2.702,0 4.896,-2.194 4.896,-4.896l-0,-0.01c-0,-2.702 -2.194,-4.896 -4.896,-4.896Z" style="fill:#333333;"/></g><g id="beam10" serif:id="beam"><path id="beam11" serif:id="beam" d="M44.212,64.534c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,-0 -4.901,2.196 -4.901,4.901c0,2.704 2.197,4.9 4.901,4.9c2.705,0 4.901,-2.196 4.901,-4.9Z" style="fill:#333333;"/></g><g id="beam12" serif:id="beam"><path id="beam13" serif:id="beam" d="M25.73,17.943c-1.911,-1.911 -5.015,-1.911 -6.926,0l-0.005,0.005c-1.911,1.911 -1.911,5.015 0,6.926c1.911,1.911 5.015,1.911 6.926,0l0.005,-0.005c1.911,-1.911 1.911,-5.014 -0,-6.926Z" style="fill:#333333;"/></g><g id="beam14" serif:id="beam"><path id="beam15" serif:id="beam" d="M64.098,34.623c-2.699,0 -4.891,2.192 -4.891,4.892l-0,0.019c-0,2.699 2.192,4.891 4.891,4.891c2.7,0 4.892,-2.192 4.892,-4.891l0,-0.019c0,-2.7 -2.192,-4.892 -4.892,-4.892Z" style="fill:#333333;"/></g></g></g></svg>
    </template>

    <template v-if="mode == 'darkest'">
        <svg width="100%" height="100%" viewBox="0 0 79 80" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"><g id="mode_darkest"><rect id="Bounds" x="0" y="-0" width="78.623" height="79.049" style="fill:none;"/><path d="M39.315,23.791c8.684,-0 15.734,7.05 15.734,15.733c0,8.684 -7.05,15.734 -15.734,15.734c-8.683,0 -15.733,-7.05 -15.733,-15.734c-0,-8.683 7.05,-15.733 15.733,-15.733Zm0,4.737c6.069,0 10.997,4.927 10.997,10.996c-0,6.069 -4.928,10.996 -10.997,10.996c-6.068,0 -10.996,-4.927 -10.996,-10.996c0,-6.069 4.928,-10.996 10.996,-10.996Z" style="fill:#333333;"/><g id="beams"><g id="beam"><path id="beam1" serif:id="beam" d="M44.216,14.515c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,0 -4.9,2.196 -4.9,4.901c-0,2.705 2.196,4.901 4.9,4.901c2.705,0 4.901,-2.196 4.901,-4.901Z" style="fill:#333333;"/></g><g id="beam2" serif:id="beam"><path id="beam3" serif:id="beam" d="M60.666,24.892c1.902,-1.902 1.902,-4.99 0,-6.892l-0.04,-0.039c-1.901,-1.902 -4.989,-1.902 -6.891,-0c-1.901,1.901 -1.901,4.989 0,6.891l0.04,0.04c1.902,1.901 4.99,1.901 6.891,-0Z" style="fill:#333333;"/></g><g id="beam4" serif:id="beam"><path id="beam5" serif:id="beam" d="M25.737,61.103c1.909,-1.91 1.909,-5.011 -0,-6.921l-0.01,-0.01c-1.91,-1.91 -5.011,-1.91 -6.921,-0c-1.91,1.91 -1.91,5.011 -0,6.921l0.01,0.01c1.91,1.91 5.011,1.91 6.921,-0Z" style="fill:#333333;"/></g><g id="beam6" serif:id="beam"><path id="beam7" serif:id="beam" d="M60.676,54.167c-1.907,-1.907 -5.004,-1.907 -6.911,0l-0.02,0.02c-1.907,1.907 -1.907,5.004 0,6.911c1.907,1.907 5.004,1.907 6.911,-0l0.02,-0.02c1.907,-1.907 1.907,-5.004 0,-6.911Z" style="fill:#333333;"/></g><g id="beam8" serif:id="beam"><path id="beam9" serif:id="beam" d="M14.524,34.623c-2.702,0 -4.896,2.194 -4.896,4.896l0,0.01c0,2.702 2.194,4.896 4.896,4.896c2.702,0 4.896,-2.194 4.896,-4.896l0,-0.01c0,-2.702 -2.194,-4.896 -4.896,-4.896Z" style="fill:#333333;"/></g><g id="beam10" serif:id="beam"><path id="beam11" serif:id="beam" d="M44.216,64.534c0,-2.705 -2.196,-4.901 -4.901,-4.901c-2.704,-0 -4.9,2.196 -4.9,4.901c-0,2.704 2.196,4.9 4.9,4.9c2.705,0 4.901,-2.196 4.901,-4.9Z" style="fill:#333333;"/></g><g id="beam12" serif:id="beam"><path id="beam13" serif:id="beam" d="M25.734,17.943c-1.911,-1.911 -5.015,-1.911 -6.926,0l-0.005,0.005c-1.911,1.911 -1.911,5.015 0,6.926c1.911,1.911 5.015,1.911 6.926,0l0.005,-0.005c1.911,-1.911 1.911,-5.014 0,-6.926Z" style="fill:#333333;"/></g><g id="beam14" serif:id="beam"><path id="beam15" serif:id="beam" d="M64.103,34.623c-2.7,0 -4.892,2.192 -4.892,4.892l-0,0.019c-0,2.699 2.192,4.891 4.892,4.891c2.699,0 4.891,-2.192 4.891,-4.891l0,-0.019c0,-2.7 -2.192,-4.892 -4.891,-4.892Z" style="fill:#333333;"/></g></g></g></svg>
    </template>
</a>

<script>
(function() {
    const LOCAL_STORAGE_KEY = 'piccoloThemeMode'

    var initialMode = localStorage.getItem(LOCAL_STORAGE_KEY)

    if (initialMode) {
        // Make sure the value in local storage is valid
        if (['light', 'dark', 'darkest'].indexOf(initialMode) == -1) {
            initialMode = 'light'
            localStorage.setItem(LOCAL_STORAGE_KEY, initialMode)
        }
    } else {
        // Check if the client prefers dark mode
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            initialMode = 'dark'
        } else {
            initialMode = 'light'
        }
        localStorage.setItem(LOCAL_STORAGE_KEY, initialMode)
    }

    document.documentElement.dataset.mode = initialMode

    PetiteVue.createApp({
        'mode': initialMode,
        handleClick() {
            let currentMode = this.mode

            if (currentMode == 'light') {
                this.mode = 'dark'
            } else if (currentMode == 'dark') {
                this.mode = 'darkest'
            } else if (currentMode == 'darkest') {
                this.mode = 'light'
            }

            document.documentElement.dataset.mode = this.mode
            localStorage.setItem(LOCAL_STORAGE_KEY, this.mode)

            console.log(this.mode)
        }
    }).mount('#mode_toggle')
})()
</script>
            <p class="mobile_search_link">
                <a href="../../search.htm" title="Search">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 65 64" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2">
                        <path d="M14.873 40.009c-2.315-3.943-3.642-8.532-3.642-13.429C11.231 11.91 23.141 0 37.811 0s26.58 11.91 26.58 26.58-11.91 26.58-26.58 26.58a26.44 26.44 0 0 1-14.277-4.161L9.739 62.794a3.12 3.12 0 0 1-4.413 0L.913 58.382c-1.217-1.218-1.217-3.196 0-4.413l13.96-13.96zM37.811 8.054c10.225 0 18.526 8.301 18.526 18.526s-8.301 18.526-18.526 18.526-18.526-8.301-18.526-18.526S27.586 8.054 37.811 8.054z" fill="#333333" />
                    </svg>
                </a>
            </p>
        

        <div class="searchbox_wrapper">
                <div id="searchbox" style="display: none" role="search">
                <h3 id="searchlabel">Quick search</h3>
                    <div class="searchformwrapper">
                        <form class="search" action="../../search.htm" method="get">
                            <input type="text" name="q" aria-labelledby="searchlabel" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" placeholder="Search" />
                            <button class="material-symbols-outlined" style="font-size:smaller;">
                                search
                            </button>
                        </form>
                    </div>
                </div>
                <script>document.getElementById('searchbox').style.display = "block"</script>
        </div>
    </nav>
</div>

<script>
    function toggleLanguageDropdown() {
        const dropdown = document.querySelector('.languageDropdown');
        dropdown.classList.toggle('active');
    }

    window.addEventListener('click', function(event) {
        const dropdown = document.querySelector('.languageDropdown');
        if (!dropdown.contains(event.target)) {
            dropdown.classList.remove('active');
        }
    });
</script>



    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper"><ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../cmd/index.htm">Command Reference</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../dlg/index.htm">Dialog Boxes</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../faq/index.htm">Frequently Asked Questions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../features/index.htm">Features</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../glossary/index.htm">Glossary</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../history/index.htm">History</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../index.htm">How to …</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../customize/index.htm">Customize</a></li>
<li class="toctree-l2"><a class="reference internal" href="../edit/index.htm">Edit</a></li>
<li class="toctree-l2"><a class="reference internal" href="../file/index.htm">File</a></li>
<li class="toctree-l2"><a class="reference internal" href="../macro/index.htm">Macros</a></li>
<li class="toctree-l2"><a class="reference internal" href="../plugin/index.htm">Plug-ins</a></li>
<li class="toctree-l2 current"><a class="reference internal" href="index.htm">Search</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="batch_vs_bulk.htm">Difference between Batch Replace All and Bulk Replace All</a></li>
<li class="toctree-l3"><a class="reference internal" href="number_range_syntax.htm">Number Range Expression Syntax</a></li>
<li class="toctree-l3"><a class="reference internal" href="replacement_expression_syntax.htm">Replacement Expression Syntax</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_erase.htm">To Remove Highlight from Found Strings</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_find.htm">To Find a Text String</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_grep.htm">To Find a String in Files</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_nl.htm">To Specify Newline Characters</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_regexp.htm">To Use Regular Expressions</a></li>
<li class="toctree-l3 current"><a class="current reference internal" href="#">Regular Expression Syntax</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_replace.htm">To Replace a String</a></li>
<li class="toctree-l3"><a class="reference internal" href="search_replace_files.htm">To Replace in Files</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../view/index.htm">View</a></li>
<li class="toctree-l2"><a class="reference internal" href="../window/index.htm">Window</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../link/index.htm">Links</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../macro/index.htm">Macro Reference</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../notice/index.htm">Notices</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../plugin/index.htm">Plug-in Reference</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../purchase/index.htm">How to Purchase</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../support/index.htm">Support</a></li>
</ul>

        </div>
      </div>


    <div class="document">
    <div style="margin-left: 2vw">
        <p>
            
                    <a href="../index.htm">How to …</a> &lt;
                    <a href="index.htm">Search</a> &lt;
                Regular Expression Syntax
            
        </p>
    </div>

    <script>
        window.addEventListener("load", () => {
            // Scroll toctree to current page
            // Last item in array is current page
            const elements = document.querySelectorAll("li.current");
            if (elements.length > 0) {
                elements[elements.length - 1].scrollIntoView({block: "center"});
            }
        });
    </script>

    
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <section class="tex2jax_ignore mathjax_ignore" id="regular-expression-syntax">
<h1>Regular Expression Syntax<a class="headerlink" href="#regular-expression-syntax" title="Permalink to this heading">¶</a></h1>
<p>EmEditor regular expression
syntax is based on Perl regular expression syntax.</p>
<section id="literals">
<h2>Literals<a class="headerlink" href="#literals" title="Permalink to this heading">¶</a></h2>
<p>All characters are literals except: “.”, “*”, “?”, “+”, “(”, “)”, “{”, “}”,
“[”, “]”, “^”, “$”, “|”, and “\”. These characters are literals when preceded by a
“\”. A literal is a character that matches itself. For example, searching for
“\?” will match every “?” in the document, or searching for “Hello” will match
every “Hello” in the document.</p>
</section>
<section id="metacharacters">
<h2>Metacharacters<a class="headerlink" href="#metacharacters" title="Permalink to this heading">¶</a></h2>
<p>The following tables contain the complete list of metacharacters
(non-literals) and their behavior in the context of regular expressions.</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>\</p></td>
<td><p>Marks the next character as a special character, a literal, or a back <br> reference. For example, ‘n’ matches the character “n”. ‘\n’ matches a <br> newline character. The sequence ‘' matches “\” and “\(” matches “(”.</p></td>
</tr>
<tr class="row-odd"><td><p>^</p></td>
<td><p>Matches the position at the beginning of the input string. For <br> example, “^e” matches any “e” that begins a string.</p></td>
</tr>
<tr class="row-even"><td><p>$</p></td>
<td><p>Matches the position at the end of the input string. For <br> example, “e$” matches any “e” that ends a string.</p></td>
</tr>
<tr class="row-odd"><td><p>*</p></td>
<td><p>Matches the preceding character or sub-expression zero or more times. <br> For example, zo* matches “z” and “zoo”. * is equivalent to {0,}.</p></td>
</tr>
<tr class="row-even"><td><p>+</p></td>
<td><p>Matches the preceding character or sub-expression one or more times. For <br> example, ‘zo+’ matches “zo” and “zoo” , but not “z”. + is equivalent to {1,}.</p></td>
</tr>
<tr class="row-odd"><td><p>?</p></td>
<td><p>Matches the preceding character or sub-expression zero or one time. For <br> example, “do(es)?” matches the “do” in  “do”or “does”.? is equivalent to <br> {0,1}</p></td>
</tr>
<tr class="row-even"><td><p>{n}</p></td>
<td><p>n is a nonnegative integer. Matches exactly n times. For example, ‘o{2}’ <br> does not match the “o” in “Bob” but matches the two o’s in “food”.</p></td>
</tr>
<tr class="row-odd"><td><p>{n,}</p></td>
<td><p>n is a nonnegative integer. Matches at least n times. For example, ‘o{2,}’ <br> does not match “o” in “Bob” and matches all the o’s in “foooood”. “o{1,}” is <br> equivalent to ‘o+’. ‘o{0,}’ is equivalent to ‘o*’.</p></td>
</tr>
<tr class="row-even"><td><p>{n,m}</p></td>
<td><p>m and n are nonnegative integers, where n &lt;= m. Matches at least n and <br> at most m times. For example, “o{1,3}” matches the first three o’s in “fooooood”. <br> ‘o{0,1}’ is equivalent to ‘o?’. Note that you cannot put a space between the <br> comma and the numbers.</p></td>
</tr>
<tr class="row-odd"><td><p>?</p></td>
<td><p>When this character immediately follows any of the other quantifiers (*, <br> +, ?, {n}, {n,}, {n,m}), the matching pattern is non-greedy. A non-greedy <br> pattern matches as little of the searched string as possible, whereas the <br> default greedy pattern matches as much of the searched string as possible. <br> For example, in the string “oooo”, ‘o+?’ matches a single “o”, while ‘o+’ <br> matches all ‘o’s.</p></td>
</tr>
<tr class="row-even"><td><p>.</p></td>
<td><p>Matches any single character. For example, “.e” will match text where any <br> character precedes an “e”, like “he”, “we”, or “me”. <br> In EmEditor Professional, it matches a newline character within the range specified <br> in the <strong>Additional</strong><br><strong>Lines to Search for Regular Expressions</strong> text box if the<br> <strong>Regular</strong><br><strong>Expression “.” Can Match Newline Characters</strong> check box is <br> checked.</p></td>
</tr>
<tr class="row-odd"><td><p>(pattern)</p></td>
<td><p>Parentheses serve two purposes: to group a pattern into a <br> sub-expression and to capture what generated the match. For example the <br> expression “(ab)*” would match all of the string “ababab”. Each <br> sub-expression match is captured as a back reference (see below) numbered <br> from left to right. To match parentheses characters ( ), use ‘\(’ or ‘\)’.</p></td>
</tr>
<tr class="row-even"><td><p>(?<name>pattern)</p></td>
<td><p>Captures the string matched by “pattern” into the group “name”.</p></td>
</tr>
<tr class="row-odd"><td><p>\1 - \9</p></td>
<td><p>Indicates a back reference - a back reference is a reference to a <br> previous sub-expression that has already been matched. The reference is to <br> what the sub-expression matched, not to the expression itself. A back <br> reference consists of the escape character “\” followed by a digit “1” to <br> “9”, “\1” refers to the first sub-expression, “\2” to the second etc. For <br> example, “(a)\1” would capture “a” as the first back reference and match any <br> text “aa”. Back references can also be used when using the <strong>Replace</strong> <br> feature under the <strong>Search</strong> menu. Use regular expressions to locate a <br> text pattern, and the matching text can be replaced by a specified back <br> reference. For example, “(h)(e)” will find “he”, and putting “\1” in <br> the <strong>Replace With</strong> box will replace “he” with “h” whereas “\2\1” will <br> replace “he” with “eh”.</p></td>
</tr>
<tr class="row-even"><td><p>\k<name></p></td>
<td><p>Indicates a named back reference. A named back reference is a reference to a previous named capturing group using this form: (?<name>expression). If “name” is a number, it indicates a numbered back reference, equivalent to \1, \2, \3, …</p></td>
</tr>
<tr class="row-odd"><td><p>(?:pattern)</p></td>
<td><p>A subexpression that matches pattern but does not capture the match, <br> that is, it is a non-capturing match that is not stored for possible later <br> use with back references. This is useful for combining parts of a pattern <br> with the “or” character (|). For example, ‘industr(?:y|ies) is a more <br> economical expression than ‘industry|industries’.</p></td>
</tr>
<tr class="row-even"><td><p>(?=pattern)</p></td>
<td><p>A subexpression that performs a positive lookahead search, which matches <br> the string at any point where a string matching pattern begins. For example, <br> “x(?=abc)” matches an “x”only if it is followed by the expression “abc”. <br> This is a non-capturing match, that is, the match is not captured for <br> possible later use with back references. pattern cannot contain a newline character.</p></td>
</tr>
<tr class="row-odd"><td><p>(?!pattern)</p></td>
<td><p>A subexpression that performs a negative lookahead search, which matches <br> the search string at any point where a string not matching pattern begins. <br> For example, “x(?!abc)” matches an “x” only if it is not followed by the <br> expression “abc”. This is a non-capturing match, that is, the match is not captured for possible later use with back references. pattern cannot contain a newline character.</p></td>
</tr>
<tr class="row-even"><td><p>(?&lt;=pattern)</p></td>
<td><p>A subexpression that performs a positive lookbehind search, which matches <br> the search string at any point where a string matching pattern ends. <br> For example, “(?&lt;=abc)x” matches an “x” only if it is preceded by the <br> expression “abc”. This is a non-capturing match, that is, the match is not <br> captured for possible later use with back references. pattern cannot contain <br> a newline character. pattern must be of fixed length.</p></td>
</tr>
<tr class="row-odd"><td><p>(?&lt;!pattern)</p></td>
<td><p>A subexpression that performs a negative lookbehind search, which matches <br> the search string at any point where a string not matching pattern ends. <br> For example, “(?&lt;!abc)x” matches an “x” only if it is not preceded by the <br> expression “abc”. This is a non-capturing match, that is, the match is not <br> captured for possible later use with back references. pattern cannot contain <br> a newline character. pattern must be of fixed length.</p></td>
</tr>
<tr class="row-even"><td><p>x|y</p></td>
<td><p>Matches either x or y. For example, ‘z|food’ matches “z” or “food”. ‘(z|f)ood’ <br> matches “zood” or “food”.</p></td>
</tr>
<tr class="row-odd"><td><p>[xyz]</p></td>
<td><p>A character set. Matches any one of the enclosed characters. For <br> example, ‘[abc]’ matches the ‘a’ in “plain”.</p></td>
</tr>
<tr class="row-even"><td><p>[^xyz]</p></td>
<td><p>A negative character set. Matches any character not enclosed. For <br> example, ‘[^abc]’ matches the ‘p’ in “plain”.</p></td>
</tr>
<tr class="row-odd"><td><p>[a-z]</p></td>
<td><p>A range of characters. Matches any character in the specified range. For <br> example, ‘[a-z]’ matches any lowercase alphabetic character in the range ‘a’ <br> through ‘z’.</p></td>
</tr>
<tr class="row-even"><td><p>[^a-z]</p></td>
<td><p>A negative range characters. Matches any character not in the specified <br> range. For example, ‘[^a-z]’ matches any character not in the range ‘a’ <br> through ‘z’.</p></td>
</tr>
</tbody>
</table>
</section>
<section id="character-classes">
<h2>Character Classes<a class="headerlink" href="#character-classes" title="Permalink to this heading">¶</a></h2>
<p>The following character classes are used within a character set such as “[:classname:]”.
For instance, “[[:space:]]”
is the set of all whitespace characters.</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>alnum</p></td>
<td><p>Any linguistic character and number: alphabetical, syllabary, or ideographic.</p></td>
</tr>
<tr class="row-odd"><td><p>alpha</p></td>
<td><p>Any linguistic character: alphabetical, syllabary, or ideographic.</p></td>
</tr>
<tr class="row-even"><td><p>blank</p></td>
<td><p>Any blank character, either a space or a tab.</p></td>
</tr>
<tr class="row-odd"><td><p>cntrl</p></td>
<td><p>Any control character.</p></td>
</tr>
<tr class="row-even"><td><p>digit</p></td>
<td><p>Any digit 0-9.</p></td>
</tr>
<tr class="row-odd"><td><p>graph</p></td>
<td><p>Any graphical character.</p></td>
</tr>
<tr class="row-even"><td><p>lower</p></td>
<td><p>Any lowercase character a-z, and other lowercase character.</p></td>
</tr>
<tr class="row-odd"><td><p>print</p></td>
<td><p>Any printable character.</p></td>
</tr>
<tr class="row-even"><td><p>punct</p></td>
<td><p>Any punctuation character.</p></td>
</tr>
<tr class="row-odd"><td><p>space</p></td>
<td><p>Any whitespace character.</p></td>
</tr>
<tr class="row-even"><td><p>upper</p></td>
<td><p>Any uppercase character A-Z, and other uppercase character.</p></td>
</tr>
<tr class="row-odd"><td><p>xdigit</p></td>
<td><p>Any hexadecimal digit character, 0-9, a-f and A-F.</p></td>
</tr>
<tr class="row-even"><td><p>word</p></td>
<td><p>Any word character - all alphanumeric characters plus the underscore.</p></td>
</tr>
<tr class="row-odd"><td><p>unicode</p></td>
<td><p>Any character whose code is greater than 255. (Regex.Boost only)</p></td>
</tr>
</tbody>
</table>
</section>
<section id="character-properties">
<h2>Character Properties<a class="headerlink" href="#character-properties" title="Permalink to this heading">¶</a></h2>
<p>Syntax:</p>
<p>\p{property-name}</p>
<p>\P{property-name}  (negative)</p>
<p>\p{^property-name}  (negative)  (Onigmo only)</p>
<p>The following property names can be used. For instance, “\p{alnum}” is any alphanumeric character, and “\P{alnum}” is its negative form.</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>alnum</p></td>
<td><p>Any linguistic character and number: alphabetical, syllabary, or ideographic.</p></td>
</tr>
<tr class="row-odd"><td><p>alpha</p></td>
<td><p>Any linguistic character: alphabetical, syllabary, or ideographic.</p></td>
</tr>
<tr class="row-even"><td><p>blank</p></td>
<td><p>Any blank character, either a space or a tab.</p></td>
</tr>
<tr class="row-odd"><td><p>cntrl</p></td>
<td><p>Any control character.</p></td>
</tr>
<tr class="row-even"><td><p>digit</p></td>
<td><p>Any digit 0-9.</p></td>
</tr>
<tr class="row-odd"><td><p>graph</p></td>
<td><p>Any graphical character.</p></td>
</tr>
<tr class="row-even"><td><p>lower</p></td>
<td><p>Any lowercase character a-z, and other lowercase character.</p></td>
</tr>
<tr class="row-odd"><td><p>print</p></td>
<td><p>Any printable character.</p></td>
</tr>
<tr class="row-even"><td><p>punct</p></td>
<td><p>Any punctuation character.</p></td>
</tr>
<tr class="row-odd"><td><p>space</p></td>
<td><p>Any whitespace character.</p></td>
</tr>
<tr class="row-even"><td><p>upper</p></td>
<td><p>Any uppercase character A-Z, and other uppercase character.</p></td>
</tr>
<tr class="row-odd"><td><p>xdigit</p></td>
<td><p>Any hexadecimal digit character, 0-9, a-f and A-F.</p></td>
</tr>
<tr class="row-even"><td><p>word</p></td>
<td><p>Any word character - all alphanumeric characters plus the underscore.</p></td>
</tr>
<tr class="row-odd"><td><p>unicode</p></td>
<td><p>Any character whose code is greater than 255. (Regex.Boost only)</p></td>
</tr>
<tr class="row-even"><td><p>ascii</p></td>
<td><p>Any ASCII characters. (Onigmo only)</p></td>
</tr>
<tr class="row-odd"><td><p>Hiragana</p></td>
<td><p>Any Hiragana character. (Onigmo only)</p></td>
</tr>
<tr class="row-even"><td><p>Katakana</p></td>
<td><p>Any Katakana character. (Onigmo only)</p></td>
</tr>
<tr class="row-odd"><td><p>Han</p></td>
<td><p>Any Han character. (Onigmo only)</p></td>
</tr>
<tr class="row-even"><td><p>Hangul</p></td>
<td><p>Any Hangul character. (Onigmo only)</p></td>
</tr>
</tbody>
</table>
</section>
<section id="single-character-escape-sequences">
<h2>Single character escape sequences<a class="headerlink" href="#single-character-escape-sequences" title="Permalink to this heading">¶</a></h2>
<p>The following escape sequences are aliases for single characters:</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>0x07</p></td>
<td><p>\a</p></td>
<td><p>Bell character.</p></td>
</tr>
<tr class="row-odd"><td><p>0x0C</p></td>
<td><p>\f</p></td>
<td><p>Form feed.</p></td>
</tr>
<tr class="row-even"><td><p>0x0A</p></td>
<td><p>\n</p></td>
<td><p>Newline character.</p></td>
</tr>
<tr class="row-odd"><td><p>0x0D</p></td>
<td><p>\r</p></td>
<td><p>Carriage return.</p></td>
</tr>
<tr class="row-even"><td><p>0x09</p></td>
<td><p>\t</p></td>
<td><p>Tab character.</p></td>
</tr>
<tr class="row-odd"><td><p>0x0B</p></td>
<td><p>\v</p></td>
<td><p>Vertical tab.</p></td>
</tr>
<tr class="row-even"><td><p>0x1B</p></td>
<td><p>\e</p></td>
<td><p>ASCII Escape character.</p></td>
</tr>
<tr class="row-odd"><td><p>0dd</p></td>
<td><p>\0dd</p></td>
<td><p>An octal character code, where dd is one or more octal <br> digits (Boost.Regex only).</p></td>
</tr>
<tr class="row-even"><td><p>0xXX</p></td>
<td><p>\xXX</p></td>
<td><p>A hexadecimal character code, where XX is one or more <br> hexadecimal digits (a Unicode character).</p></td>
</tr>
<tr class="row-odd"><td><p>0xXXXX</p></td>
<td><p>\x{XXXX}</p></td>
<td><p>A hexadecimal character code, where XXXX is one or more <br> hexadecimal digits (a Unicode character).</p></td>
</tr>
<tr class="row-even"><td><p>0xXXXXXXXX</p></td>
<td><p>\x{XXXXXXXX}</p></td>
<td><p>A hexadecimal character code, where XXXXXXXXis one or more <br> hexadecimal digits (a Unicode character). (Onigmo only)</p></td>
</tr>
<tr class="row-odd"><td><p>0xXXXXXXXX</p></td>
<td><p>\uXXXX</p></td>
<td><p>A hexadecimal character code, where XXXX is one or more <br> hexadecimal digits (a Unicode character). (Onigmo only)</p></td>
</tr>
<tr class="row-even"><td><p>Z-‘&#64;’</p></td>
<td><p>\cZ Z-‘&#64;’</p></td>
<td><p>An ASCII escape sequence control-Z, where Z is any ASCII <br> character greater than or equal to the character code for ‘&#64;’.</p></td>
</tr>
</tbody>
</table>
</section>
<section id="word-boundaries">
<h2>Word Boundaries<a class="headerlink" href="#word-boundaries" title="Permalink to this heading">¶</a></h2>
<p>The following escape sequences match the boundaries of words:</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>\&lt;</p></td>
<td><p>Matches the start of a word. (Boost.Regex only)</p></td>
</tr>
<tr class="row-odd"><td><p>\&gt;</p></td>
<td><p>Matches the end of a word. (Boost.Regex only)</p></td>
</tr>
<tr class="row-even"><td><p>\b</p></td>
<td><p>Matches a word boundary (the start or end of a word).</p></td>
</tr>
<tr class="row-odd"><td><p>\B</p></td>
<td><p>Matches only when not at a word boundary.</p></td>
</tr>
</tbody>
</table>
</section>
<section id="character-class-escape-sequences">
<h2>Character class escape sequences<a class="headerlink" href="#character-class-escape-sequences" title="Permalink to this heading">¶</a></h2>
<p>The following escape sequences can be used to represent entire character
classes:</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p></p></th>
<th class="head"><p></p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>\w</p></td>
<td><p>Any word character - all alphanumeric characters plus the <br> underscore.</p></td>
</tr>
<tr class="row-odd"><td><p>\W</p></td>
<td><p>Complement of \w - find any non-word character</p></td>
</tr>
<tr class="row-even"><td><p>\s</p></td>
<td><p>Any whitespace character.</p></td>
</tr>
<tr class="row-odd"><td><p>\S</p></td>
<td><p>Complement of \s.</p></td>
</tr>
<tr class="row-even"><td><p>\d</p></td>
<td><p>Any digit 0-9.</p></td>
</tr>
<tr class="row-odd"><td><p>\D</p></td>
<td><p>Complement of \d.</p></td>
</tr>
<tr class="row-even"><td><p>\l</p></td>
<td><p>Any lower case character a-z.</p></td>
</tr>
<tr class="row-odd"><td><p>\L</p></td>
<td><p>Complement of \l.</p></td>
</tr>
<tr class="row-even"><td><p>\u</p></td>
<td><p>Any upper case character A-Z.</p></td>
</tr>
<tr class="row-odd"><td><p>\U</p></td>
<td><p>Complement of \u.</p></td>
</tr>
<tr class="row-even"><td><p>\C</p></td>
<td><p>Any single character, equivalent to ‘.’.</p></td>
</tr>
<tr class="row-odd"><td><p>\Q</p></td>
<td><p>The begin quote operator, everything that follows is treated <br> as a literal character until a \E end quote operator is found.</p></td>
</tr>
<tr class="row-even"><td><p>\E</p></td>
<td><p>The end quote operator, terminates a sequence begun with \Q.</p></td>
</tr>
</tbody>
</table>
</section>
<section id="replacement-expressions">
<h2>Replacement Expressions<a class="headerlink" href="#replacement-expressions" title="Permalink to this heading">¶</a></h2>
<p>See <a class="reference internal" href="replacement_expression_syntax.htm"><span class="doc std std-doc">Replacement Expression Syntax</span></a>.</p>
</section>
<section id="notes">
<h2>Notes<a class="headerlink" href="#notes" title="Permalink to this heading">¶</a></h2>
<ul class="simple">
<li><p>In <strong>Find in Files</strong> and in <strong>Replace in Files</strong>, the carriage return (\r) and the
line feed (\n) must be specified carefully. See <a class="reference internal" href="search_nl.htm"><span class="doc std std-doc">To <br />
Specify newline characters</span></a> for details.</p></li>
<li><p>In order for some escape sequences to work in EmEditor, like “\l”, “\u” and
their complements, the Match Case option has to be selected.</p></li>
</ul>
</section>
<section id="copyright-notice">
<h2>Copyright Notice<a class="headerlink" href="#copyright-notice" title="Permalink to this heading">¶</a></h2>
<p>The regular expression routines used in EmEditor use Boost library Regex++ and Onigmo.</p>
<p>Copyright © Dr John Maddock</p>
<p>Copyright © K. Takata, based on Oniguruma Copyright © by K. Kosako.</p>
</section>
<section id="see-also">
<h2>See Also<a class="headerlink" href="#see-also" title="Permalink to this heading">¶</a></h2>
<ul class="simple">
<li><p><a class="reference internal" href="../../faq/search/search_reg_exp_ex.htm"><span class="doc std std-doc">Q. What are examples of <br />
regular expressions?</span></a></p></li>
<li><p><a class="reference internal" href="search_nl.htm"><span class="doc std std-doc">To Specify newline characters</span></a></p></li>
<li></li>
<li></li>
</ul>
</section>
<section id="notes-nnn-and-xhh-are-unsupported">
<h2>(Notes: <strong>\nnn</strong> and <strong>\xHH</strong> are unsupported)<a class="headerlink" href="#notes-nnn-and-xhh-are-unsupported" title="Permalink to this heading">¶</a></h2>
</section>
</section>


            <div class="clearer"></div>
          </div>
        </div>
      </div>

    
        <div id="show_right_sidebar">
            <p><a class="toggle_right_sidebar" href="#"><span class="icon">&lt;</span><span>Page contents<span></a></p>
        </div>

        <div id="right_sidebar">
            <p><a class="toggle_right_sidebar" href="#"><span class="icon">&gt;</span><span>Page contents:<span></a></p>
            <div class="page_toc">
                <ul>
<li><a class="reference internal" href="#">Regular Expression Syntax</a><ul>
<li><a class="reference internal" href="#literals">Literals</a></li>
<li><a class="reference internal" href="#metacharacters">Metacharacters</a></li>
<li><a class="reference internal" href="#character-classes">Character Classes</a></li>
<li><a class="reference internal" href="#character-properties">Character Properties</a></li>
<li><a class="reference internal" href="#single-character-escape-sequences">Single character escape sequences</a></li>
<li><a class="reference internal" href="#word-boundaries">Word Boundaries</a></li>
<li><a class="reference internal" href="#character-class-escape-sequences">Character class escape sequences</a></li>
<li><a class="reference internal" href="#replacement-expressions">Replacement Expressions</a></li>
<li><a class="reference internal" href="#notes">Notes</a></li>
<li><a class="reference internal" href="#copyright-notice">Copyright Notice</a></li>
<li><a class="reference internal" href="#see-also">See Also</a></li>
<li><a class="reference internal" href="#notes-nnn-and-xhh-are-unsupported">(Notes: <strong>\nnn</strong> and <strong>\xHH</strong> are unsupported)</a></li>
</ul>
</li>
</ul>

            </div>
        </div>
    

      <div class="clearer"></div>
    </div>

    
    <div class="footer" role="contentinfo">
        &#169; Copyright 2023 Emurasoft.
      Created using <a href="https://www.sphinx-doc.org/">Sphinx</a> 7.0.1.
    </div>

    <p id="theme_credit">Styled using the <a href="https://github.com/piccolo-orm/piccolo_theme">Piccolo Theme</a></p>
  </body>
</html>